:root {
  --primary-color: #578aff;
  --secondary-color: #adadad;
}

* {
  margin: 0;
  box-sizing: content-box;
}

/* pour tester la propriété stroke depuis css puisque les svg ignorent broder  */
svg circle animate{
  stroke-width: 4px;
  stroke: darkblue!important;
}

.circle_container {
  width: 800px;
  height: 100px;
  position: relative;
}

.circle {
  width: 80px;
  height: 80px;
  
  border-radius: 50%;
  background-color: var(--primary-color);
  border: 4px solid green;
  /* le centre est à 50 donc son bord à 10 autrement dit left:10 */
  position: absolute;
  left: 10px;
  top: 10px;
}

.circle_animated {
  width: 80px;
  height: 80px;
  border-radius: 50%;
  position: absolute;
  /* background-color:#adadad; */
  animation-name: animated_circle;
  animation-duration: 3s;
  animation-iteration-count: infinite;
  left: 10px;
  top: 10px;
}

@keyframes animated_circle {
  /* mieux vaut recourir à des variables dans l'hypothèse de changements initiés via JS */

  0% {
    background-color: var(--secondary-color);
  }
  50.0% {
    background-color: var(--primary-color);
  }
  100.0% {
    background-color: var(--secondary-color);
  }
}

.radient_circle {
  width: 80px;
  height: 80px;
  border-radius: 50%;
  background-image: radial-gradient(rgba(255, 255, 255, 0), blue);
  position: absolute;
  left: 10px;
  top: 10px;
}


/* pour les animations multiples */
.rect_animated {
  width: 80px;
  height: 80px;
  position: absolute;
  /* si on veut rigoureusement le même effet qu'avec les SVG */
  background-color:#adadad;
  /* on peut garder le même animation-name pour cercles et rectangles */
  animation-name: animated_circle;
  animation-duration: 3s;
  animation-iteration-count: infinite;
}

.first{
  left: 10px;
  top: 10px;  
}
.second{
  left: 120px;
  top: 10px;
  animation-delay: 1s;
}
.third{
  left: 230px;
  top: 10px;
  animation-delay: 2s;
}

@keyframes animated_circle {
  /* mieux vaut recourir à des variables dans l'hypothèse de changements initiés via JS */

  0% {
    background-color: var(--secondary-color);
  }
  50.0% {
    background-color: var(--primary-color);
  }
  100.0% {
    background-color: var(--secondary-color);
  }
}

/* Pour l'enchainement des cercles et la vague des transform-translate
on va arrêter avec le  positionnement absolue  */

.circle_block_container {
  width: 800px;
  height: 300px;
}

.circle-block-animated{
  display: inline-block;
  width: 80px;
  height: 80px;
  margin: 0 10px;
  
  border-radius: 50%;
  /* background-color:#adadad; */
  animation-name: animated_circle, transform_translate;
  animation-duration: 1s, 1.5s;
  animation-iteration-count: infinite;
  transform: translateY(100px) 2s 0.2s;


  /* left: 10px;
  top: 10px; */

}

@keyframes transform_translate {
  /* mieux vaut recourir à des variables dans l'hypothèse de changements initiés via JS */

  0% {
    transform: translateY(0);
  }
  50.0% {
    transform: translateY(100px);
  }
  100.0% {
    transform: translate(0);
  }
}

.circle2{
  animation-delay: 0.33s, 0.2s;  
}
.circle3{
  animation-delay: 0.66s, 0.4s;
}
.circle4{
  animation-delay: 1s, 0.6s;
}
.circle5{
  animation-delay: 1.33s, 0.8s;
}
.circle6{
  animation-delay: 1.66s, 1s;
}